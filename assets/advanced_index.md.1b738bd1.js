import{_ as a,o as s,c,k as e,a as t}from"./chunks/framework.5bf30b3a.js";const k=JSON.parse('{"title":"跨域问题","description":"","frontmatter":{},"headers":[],"relativePath":"advanced/index.md","filePath":"advanced/index.md","lastUpdated":1677753441000}'),o={name:"advanced/index.md"},n=e("h1",{id:"跨域问题",tabindex:"-1"},[t("跨域问题 "),e("a",{class:"header-anchor",href:"#跨域问题","aria-label":'Permalink to "跨域问题"'},"​")],-1),l=e("blockquote",null,[e("p",null,[t("跨域：即触发了浏览器的同源策略即请求的时候出现： "),e("code",null,"Access to XMLHttpRequest at ***")])],-1),d=e("div",{class:"tip custom-block"},[e("p",{class:"custom-block-title"},"TIP"),e("p",null,"针对跨域问题，这一点在electron中其实无需担心，理解跨域产生问题的前端小朋友们应当知道这是浏览器造成的，此时我们只需要在主进程创建窗口位置设置一个值即可（electron版本高于4.x.x）即webPreferences中的webSecurity选项 ；将其设置为false就好了，至于为何事高于4.x.x呢，因为在低于该版本中，electron团队已经默认将其设置为false")],-1),r=e("p",null,"但是你可能会在使用webview标签或者是子窗口的时候还是会遇到跨域问题，此时你需要在新建窗口时同样关闭该选项即可。",-1),i=[n,l,d,r];function _(p,u,h,x,f,m){return s(),c("div",null,i)}const v=a(o,[["render",_]]);export{k as __pageData,v as default};
