import{_ as e,o as a,c as t,O as l}from"./chunks/framework.26a4e2b8.js";const f=JSON.parse('{"title":"特色功能","description":"","frontmatter":{},"headers":[],"relativePath":"project/features.md","filePath":"project/features.md","lastUpdated":1677753441000}'),r={name:"project/features.md"},i=l('<h1 id="特色功能" tabindex="-1">特色功能 <a class="header-anchor" href="#特色功能" aria-label="Permalink to &quot;特色功能&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">说明</p><p>目前的市面上已经有很多 electron 和 vue 的捆绑插件和框架，但通常都是一套简单的解决方案，并没有一体式的可供热拔插的功能解决方案，本框架有如下几大通用功能供您拆解使用。</p></div><h2 id="分支说明" tabindex="-1">分支说明 <a class="header-anchor" href="#分支说明" aria-label="Permalink to &quot;分支说明&quot;">​</a></h2><p>本框架以分支的形式分发不同功能的代码库。</p><h3 id="electron-vue-template" tabindex="-1">electron-vue-template <a class="header-anchor" href="#electron-vue-template" aria-label="Permalink to &quot;electron-vue-template&quot;">​</a></h3><ul><li>master <ul><li>只保留最稳定的功能和依赖</li></ul></li><li>NoLayOut <ul><li>这个分支的主进程使用了 typescript，同时依赖部分将采用激进式更新，并且渲染进程如其名，没有任何多余的代码，只有一个页面，依赖和功能同上分支。</li></ul></li></ul><h3 id="electron-vite-template" tabindex="-1">electron-vite-template <a class="header-anchor" href="#electron-vite-template" aria-label="Permalink to &quot;electron-vite-template&quot;">​</a></h3><blockquote><p>这个仓库内全部使用 typescript</p></blockquote><ul><li>main <ul><li>只保留最稳定的功能和依赖</li></ul></li><li>strict <ul><li>这个分支不再允许渲染进程使用任何有关 node 的 api，您必须通过预加载 js 去传递数据</li></ul></li></ul><h2 id="多种更新方式" tabindex="-1">多种更新方式 <a class="header-anchor" href="#多种更新方式" aria-label="Permalink to &quot;多种更新方式&quot;">​</a></h2><p>拥有两种更新方法，不再仅仅只局限于 updater 的方法进行更新，您可以自行定制属于您自己的安装包并更新（需要您拥有 nsis 基础）使用详情请下跳到主进程代码解析</p><h2 id="自定义头部" tabindex="-1">自定义头部 <a class="header-anchor" href="#自定义头部" aria-label="Permalink to &quot;自定义头部&quot;">​</a></h2><p>在 win 情况下允许您关闭 electron 自带的程序头部，使用您自己的程序头部，更加美观，代码位置在<code>src\\renderer\\components\\title</code>中，可自行修改</p><h2 id="内置服务端" tabindex="-1">内置服务端 <a class="header-anchor" href="#内置服务端" aria-label="Permalink to &quot;内置服务端&quot;">​</a></h2><p>在 electron 中加入了 express 服务端，允许您将您的软件作为服务端使用 or 实现一些特定需求。（或者您可以更换为您更顺手的 node 服务端）</p><h2 id="ffi-napi" tabindex="-1">ffi-napi <a class="header-anchor" href="#ffi-napi" aria-label="Permalink to &quot;ffi-napi&quot;">​</a></h2><p>允许您在指定文件夹加入 dll 文件来直接调用 dll，免去配置开发和生产环境时由于文件位置不对导致 dll 调用失败的问题。详情请到进阶中查看。</p>',17),o=[i];function n(c,s,p,d,u,h){return a(),t("div",null,o)}const _=e(r,[["render",n]]);export{f as __pageData,_ as default};
