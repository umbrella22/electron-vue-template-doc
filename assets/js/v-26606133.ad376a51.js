"use strict";(self.webpackChunkelectron_vue_template_doc=self.webpackChunkelectron_vue_template_doc||[]).push([[837],{3417:(e,t,o)=>{o.r(t),o.d(t,{data:()=>d});const d={key:"v-26606133",path:"/Overview/advanced/hotUpdate.html",title:"热更新",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"需要一个能够无权限访问得地址。",slug:"需要一个能够无权限访问得地址。",children:[]}],filePathRelative:"Overview/advanced/hotUpdate.md",git:{updatedTime:null}}},8710:(e,t,o)=>{o.r(t),o.d(t,{default:()=>s});var d=o(6252);const l=(0,d._)("h1",{id:"热更新",tabindex:"-1"},[(0,d._)("a",{class:"header-anchor",href:"#热更新","aria-hidden":"true"},"#"),(0,d.Uk)(" 热更新")],-1),a={class:"custom-container tip"},c=(0,d._)("p",{class:"custom-container-title"},"提示",-1),i=(0,d.Uk)("目前仅"),r={href:"https://github.com/umbrella22/electron-vite-template",target:"_blank",rel:"noopener noreferrer"},n=(0,d.Uk)("vite-template项目"),u=(0,d.Uk)("可用，vue-template仍在测试。"),h=(0,d.uE)('<ul><li>hotPublishUrl为完整的url,比如<code>https://www.xxxxx.com</code></li><li>hotPublishConfigName则是拼接在url后面的文件名称，完整示例<code>https://www.xxxxx.com/updater.json</code>；其中<code>updater</code>为hotPublishConfigName</li></ul><h2 id="需要一个能够无权限访问得地址。" tabindex="-1"><a class="header-anchor" href="#需要一个能够无权限访问得地址。" aria-hidden="true">#</a> 需要一个能够无权限访问得地址。</h2><ul><li>在运行完build命令以后在项目目录执行<code>node .electron-vite/hot-updater.js</code></li><li>等待命令完成以后，您会在<code>build\\update\\update</code>路径中找到您设置过得<code>hotPublishConfigName</code>的一个json文件，请将它和目录同级得<code>.zip</code>文件一起存放到您的文件服务器目录.</li><li>之后在渲染进程内通过<code>ipcRenderer.invoke(&quot;hot-update&quot;)</code>来启动热更新程序。然后在渲染进程中通过<code>ipcRenderer.on(&quot;hot-update-status&quot;)</code>即可监听到热更新的状态，如果没有任何意外，该ipc则会返回<code>finished</code>，表示热更新已完成，您就可以提示用户重启或者自行重启即可应用更新。但是若有错误，该ipc则会返回<code>failed</code>状态并在<code>message</code>对象中一并返回错误信息。</li></ul>',3),s={render:function(e,t){const o=(0,d.up)("OutboundLink");return(0,d.wg)(),(0,d.iD)(d.HY,null,[l,(0,d._)("div",a,[c,(0,d._)("p",null,[i,(0,d._)("a",r,[n,(0,d.Wm)(o)]),u])]),h],64)}}}}]);