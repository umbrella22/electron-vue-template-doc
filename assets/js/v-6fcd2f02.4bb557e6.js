(self.webpackChunkelectron_vue_template_doc=self.webpackChunkelectron_vue_template_doc||[]).push([[801],{227:(t,e,l)=>{"use strict";l.r(e),l.d(e,{data:()=>n});const n={key:"v-6fcd2f02",path:"/Overview/advanced/moreWin.html",title:"多窗口",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"Overview/advanced/moreWin.md",git:{updatedTime:1588215405e3,contributors:[{name:"张恒",email:"syl1998@hotmail.com",commits:2}]}}},6205:(t,e,l)=>{"use strict";l.r(e),l.d(e,{default:()=>a});const n=(0,l(6252).uE)('<h1 id="多窗口"><a class="header-anchor" href="#多窗口">#</a> 多窗口</h1><p>在本框架中，Vue-router使用的是哈希模式，但当前模式下，无法进行像history模式那样随心所欲的通过url打开链接，让我们使用新建窗口url跳转大法失败了；这样就只能想一个其他办法了，那就是新建一个窗口，然后通过拼接的形式来进行url跳转，而且多窗口之间可共享localStorage。是不是很令人振奋，更令人激动的是，要启用该功能几乎不用做任何准备，只需要您在您需要开启的位置使用：</p><div class="language-JavaScript ext-JavaScript line-numbers-mode"><pre class="language-JavaScript"><code>// this.$ipcApi是封装好了的的ipcRenderer\n      this.$ipcApi.send(&quot;open-win&quot;, {\n        url:&#39;/form/index&#39;\n      });\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>see，一行代码即可，其中url就是路由的path。</p></blockquote><p>当然，只实现这一个功能未免太过寒酸，下面是该ipc通道可传递参数</p><table><thead><tr><th style="text-align:center;">名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">url</td><td style="text-align:center;">String</td><td style="text-align:center;">&quot;&quot;</td><td style="text-align:left;">router中的path</td></tr><tr><td style="text-align:center;">sendData</td><td style="text-align:center;">Object</td><td style="text-align:center;">{}</td><td style="text-align:left;">向开启的子窗口中发送信息，子窗口内请监听名称为：send-data的ipc通道</td></tr><tr><td style="text-align:center;">IsPay</td><td style="text-align:center;">Boolean</td><td style="text-align:center;">false</td><td style="text-align:left;">当前窗口是否为支付窗口</td></tr><tr><td style="text-align:center;">PayUrl</td><td style="text-align:center;">String</td><td style="text-align:center;">&quot;&quot;</td><td style="text-align:left;">微信 / 支付宝支付回调地址中标识字段。</td></tr></tbody></table><p>其中子窗口允许你弹窗来展示应用内支付的窗口，并且当回跳到您自己设置的回调地址时会自动关闭窗口。</p>',7),a={render:function(t,e){return n}}}}]);