import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.5bf30b3a.js";const F=JSON.parse('{"title":"热更新","description":"","frontmatter":{},"headers":[],"relativePath":"advanced/hot-update-rust.md","filePath":"advanced/hot-update-rust.md","lastUpdated":1691253650000}'),o={name:"advanced/hot-update-rust.md"},e=l(`<h1 id="热更新" tabindex="-1">热更新 <a class="header-anchor" href="#热更新" aria-label="Permalink to &quot;热更新&quot;">​</a></h1><p><strong>前面只更新渲染进程的增量更新已经满足大部分人的需求了，但是还是有下面的几点满足不了所有人。</strong></p><h2 id="只更新更新渲染进程内容的不足" tabindex="-1">只更新更新渲染进程内容的不足 <a class="header-anchor" href="#只更新更新渲染进程内容的不足" aria-label="Permalink to &quot;只更新更新渲染进程内容的不足&quot;">​</a></h2><ol><li><p>不能更新原生依赖，不能更新<code>electron</code>版本、不能更新其他额外文件等等不足</p></li><li><p>不能开启<code>asar</code></p></li><li><p>不能只下载发生变更的文件，更新的颗粒度不够细</p></li></ol><h2 id="另外的方法" tabindex="-1">另外的方法 <a class="header-anchor" href="#另外的方法" aria-label="Permalink to &quot;另外的方法&quot;">​</a></h2><ol><li>可以通过<code>electron</code> 对于加载<code>default_app.asar</code>、<code>app.asar</code>、和<code>app</code>目录有限级别的不同，实现对开启<code>asar</code>的程序进行热更、但还是无法实现<code>electron</code>版本更新, 还需要多次重启</li></ol><h2 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-label="Permalink to &quot;优点&quot;">​</a></h2><ol><li><p>可以更新<code>electron</code>的版本</p></li><li><p>可以开启<code>asar</code></p></li><li><p>方便版本回退</p></li><li><p>精细化更新，只更新变更的文件</p></li></ol><h2 id="缺点" tabindex="-1">缺点 <a class="header-anchor" href="#缺点" aria-label="Permalink to &quot;缺点&quot;">​</a></h2><ol><li><p>多一个专门使用<code>rust</code>编写的应用程序<a href="https://github.com/mashirooooo/electron_updater" target="_blank" rel="noreferrer">updater</a></p></li><li><p>复杂度稍微有点提高</p></li></ol><h2 id="配置updateconfig-json-生成" tabindex="-1">配置<code>updateConfig.json</code>, 生成 <a class="header-anchor" href="#配置updateconfig-json-生成" aria-label="Permalink to &quot;配置\`updateConfig.json\`, 生成&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">配置项</th><th style="text-align:center;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">output</td><td style="text-align:center;">string</td><td style="text-align:left;"><code>npm run pack:rustUpdater</code>产物基础输出目录</td></tr><tr><td style="text-align:center;">target</td><td style="text-align:center;">string</td><td style="text-align:left;">新版本所有文件gzip压缩后存放的路径</td></tr><tr><td style="text-align:center;">updateJsonName</td><td style="text-align:center;">string</td><td style="text-align:left;">新版本信息</td></tr><tr><td style="text-align:center;">version</td><td style="text-align:center;">string</td><td style="text-align:left;">新版本version</td></tr><tr><td style="text-align:center;">tempDirectory</td><td style="text-align:center;">string</td><td style="text-align:left;">更新的目录</td></tr><tr><td style="text-align:center;">oldDirectory</td><td style="text-align:center;">string</td><td style="text-align:left;">旧版本的文件迁移地址，可以方便版本回退</td></tr><tr><td style="text-align:center;">url</td><td style="text-align:center;">string</td><td style="text-align:left;">更新的url</td></tr><tr><td style="text-align:center;">updaterName</td><td style="text-align:center;">string</td><td style="text-align:left;">更新器名称</td></tr></tbody></table><h2 id="更新流程" tabindex="-1">更新流程 <a class="header-anchor" href="#更新流程" aria-label="Permalink to &quot;更新流程&quot;">​</a></h2><ol><li><p>获取更新程序<a href="https://github.com/mashirooooo/electron_updater/releases" target="_blank" rel="noreferrer">electron_updater</a>可以获取对应的版本</p></li><li><p>将文件重命名为配置项的<code>updaterName</code></p></li><li><p>通过脚本，将不同系统的更新程序<code>copy</code>到<code>unpacked</code>目录里面，参考脚本<a href="https://github.com/umbrella22/electron-vite-template/blob/main/.electron-vite/builderHook/copyFileHook.js" target="_blank" rel="noreferrer">.electron-vite/builderHook/copyFileHook.js</a></p></li><li><p>当程序发布新版本时，调用<code>npm run pack:rustUpdater</code>生成当前的版本信息<code>update-config.json</code>即配置里面的<code>updateJsonName</code>，里面包含最新的版本号、每个必须文件的sha256信息和路径,和一个所有必须文件的gzip压缩的文件夹<code>gzip1.0.0</code>，即配置的 <code>target</code> + <code>version</code>;</p></li><li><p>旧版程序通过配置上的<code>url</code>配置访问<code>url</code>目录下的<code>update-config.json</code></p></li><li><p>实例化<code>UpdateElectron</code></p></li></ol><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>statusCallback</td><td>(res: UpdateInfo)</td><td>用于回调内部消息，一般情况下用不到</td></tr><tr><td>updaterName</td><td>string</td><td>更新 Updater 名称</td></tr><tr><td>version</td><td>string</td><td>当前版本号</td></tr><tr><td>exePath</td><td>string</td><td>当前 exe 路径 <code>app.getPath(&#39;exe&#39;)</code></td></tr><tr><td>tempDirectory</td><td>string</td><td>临时目录</td></tr><tr><td>updateConfigName</td><td>string</td><td>更新配置文件名称</td></tr><tr><td>updateJson</td><td>UpdateJson</td><td>更新配置文件</td></tr><tr><td>baseUrl</td><td>string</td><td>更新下载 gzip 的基本地址 <code>\${url}/\${target}\${version}</code></td></tr><tr><td>downloadFn</td><td>DownloadFn</td><td>下载函数</td></tr><tr><td>options</td><td>HashElementOptions</td><td>通过 options 配置文件排除文件夹或指定后缀 <code>folders: { exclude: [&#39;.*&#39;, &#39;node_modules&#39;, &#39;test_coverage&#39;] }, files: { exclude: [&#39;*.js&#39;, &#39;*.json&#39;] }</code></td></tr></tbody></table><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 获取到的update-config.json的内容</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">res</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">request</span><span style="color:#E1E4E8;">({ url: </span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">updateConfig</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">url</span><span style="color:#9ECBFF;">}/\${</span><span style="color:#E1E4E8;">updateConfig</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">updateJsonName</span><span style="color:#9ECBFF;">}.json\`</span><span style="color:#E1E4E8;">, })</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">updateJson</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UpdateJson</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> res.data;</span></span>
<span class="line"><span style="color:#6A737D;">// 获取临时路径</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">dirDirectory</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(app.</span><span style="color:#B392F0;">getAppPath</span><span style="color:#E1E4E8;">(), </span><span style="color:#9ECBFF;">&#39;..&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;..&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">tempDirectory</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(dirDirectory, updateConfig.tempDirectory);</span></span>
<span class="line"><span style="color:#6A737D;">// 下载函数</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">downloadFn</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">url</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Promise</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Readable</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">response</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">request</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    method: </span><span style="color:#9ECBFF;">&#39;get&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    url: url,</span></span>
<span class="line"><span style="color:#E1E4E8;">    responseType: </span><span style="color:#9ECBFF;">&#39;stream&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> response.data;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 通过 options 配置文件排除文件夹或指定后缀 防止有些东西被覆盖</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">options</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {files: {}}</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">updateElectron</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UpdateElectron</span><span style="color:#E1E4E8;">(statusCallback, updateConfig.updaterName, updateConfig.version, app.</span><span style="color:#B392F0;">getPath</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;exe&#39;</span><span style="color:#E1E4E8;">), tempDirectory, updateConfig.updateJsonName, updateJson, </span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">updateConfig</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">url</span><span style="color:#9ECBFF;">}/\${</span><span style="color:#E1E4E8;">updateConfig</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">target</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;"> </span><span style="color:#E1E4E8;">updateJson</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">version</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">, downloadFn, options)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 获取到的update-config.json的内容</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">res</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">request</span><span style="color:#24292E;">({ url: </span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">updateConfig</span><span style="color:#032F62;">.</span><span style="color:#24292E;">url</span><span style="color:#032F62;">}/\${</span><span style="color:#24292E;">updateConfig</span><span style="color:#032F62;">.</span><span style="color:#24292E;">updateJsonName</span><span style="color:#032F62;">}.json\`</span><span style="color:#24292E;">, })</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">updateJson</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UpdateJson</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> res.data;</span></span>
<span class="line"><span style="color:#6A737D;">// 获取临时路径</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">dirDirectory</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(app.</span><span style="color:#6F42C1;">getAppPath</span><span style="color:#24292E;">(), </span><span style="color:#032F62;">&#39;..&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;..&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">tempDirectory</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(dirDirectory, updateConfig.tempDirectory);</span></span>
<span class="line"><span style="color:#6A737D;">// 下载函数</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">downloadFn</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">url</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Promise</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Readable</span><span style="color:#24292E;">&gt; </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">response</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">request</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    method: </span><span style="color:#032F62;">&#39;get&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    url: url,</span></span>
<span class="line"><span style="color:#24292E;">    responseType: </span><span style="color:#032F62;">&#39;stream&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> response.data;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 通过 options 配置文件排除文件夹或指定后缀 防止有些东西被覆盖</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">options</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {files: {}}</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">updateElectron</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UpdateElectron</span><span style="color:#24292E;">(statusCallback, updateConfig.updaterName, updateConfig.version, app.</span><span style="color:#6F42C1;">getPath</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;exe&#39;</span><span style="color:#24292E;">), tempDirectory, updateConfig.updateJsonName, updateJson, </span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">updateConfig</span><span style="color:#032F62;">.</span><span style="color:#24292E;">url</span><span style="color:#032F62;">}/\${</span><span style="color:#24292E;">updateConfig</span><span style="color:#032F62;">.</span><span style="color:#24292E;">target</span><span style="color:#032F62;"> </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> </span><span style="color:#24292E;">updateJson</span><span style="color:#032F62;">.</span><span style="color:#24292E;">version</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">, downloadFn, options)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><ol start="7"><li><p>获取新版信息，如果存在版本号更新，则进入更新逻辑</p></li><li><p>下载对应的文件到临时目录上</p></li><li><p>调用更新</p></li><li><p>退出程序 <code>app.quit()</code>，必须手动调用，否则可能权限不够，更新程序结束不了该进程</p></li><li><p>等程序自动重启</p></li></ol><p>详细代码参考<a href="https://github.com/umbrella22/electron-vite-template/blob/main/src/main/services/HotUpdaterTest.ts" target="_blank" rel="noreferrer">src/main/services/HotUpdaterTest.ts</a></p><h2 id="相关项目代码" tabindex="-1">相关项目代码 <a class="header-anchor" href="#相关项目代码" aria-label="Permalink to &quot;相关项目代码&quot;">​</a></h2><p><a href="https://github.com/mashirooooo/window_updater_node" target="_blank" rel="noreferrer">https://github.com/mashirooooo/window_updater_node</a></p><p><a href="https://github.com/mashirooooo/electron_updater" target="_blank" rel="noreferrer">https://github.com/mashirooooo/electron_updater</a></p><p><strong>欢迎issue和pr</strong></p>`,22),t=[e];function p(r,c,d,y,i,E){return a(),n("div",null,t)}const g=s(o,[["render",p]]);export{F as __pageData,g as default};
