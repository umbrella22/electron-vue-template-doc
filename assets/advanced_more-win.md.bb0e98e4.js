import{_ as t,o as e,c as s,O as a}from"./chunks/framework.26a4e2b8.js";const h=JSON.parse('{"title":"多窗口","description":"","frontmatter":{},"headers":[],"relativePath":"advanced/more-win.md","filePath":"advanced/more-win.md","lastUpdated":1677753441000}'),n={name:"advanced/more-win.md"},l=a(`<h1 id="多窗口" tabindex="-1">多窗口 <a class="header-anchor" href="#多窗口" aria-label="Permalink to &quot;多窗口&quot;">​</a></h1><p>在本框架中，Vue-router使用的是哈希模式，但当前模式下，无法进行像history模式那样随心所欲的通过url打开链接，让我们使用新建窗口url跳转大法失败了；这样就只能想一个其他办法了，那就是新建一个窗口，然后通过拼接的形式来进行url跳转，而且多窗口之间可共享localStorage。是不是很令人振奋，更令人激动的是，要启用该功能几乎不用做任何准备，只需要您在您需要开启的位置使用：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// this.$ipcApi是封装好了的的ipcRenderer</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$ipcApi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">open-win</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/form/index</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>see，一行代码即可，其中url就是路由的path。</p></blockquote><p>当然，只实现这一个功能未免太过寒酸，下面是该ipc通道可传递参数</p><table><thead><tr><th style="text-align:center;">名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">url</td><td style="text-align:center;">String</td><td style="text-align:center;">&quot;&quot;</td><td style="text-align:left;">router中的path</td></tr><tr><td style="text-align:center;">sendData</td><td style="text-align:center;">Object</td><td style="text-align:center;">{}</td><td style="text-align:left;">向开启的子窗口中发送信息，子窗口内请监听名称为：send-data的ipc通道</td></tr><tr><td style="text-align:center;">IsPay</td><td style="text-align:center;">Boolean</td><td style="text-align:center;">false</td><td style="text-align:left;">当前窗口是否为支付窗口</td></tr><tr><td style="text-align:center;">PayUrl</td><td style="text-align:center;">String</td><td style="text-align:center;">&quot;&quot;</td><td style="text-align:left;">微信 / 支付宝支付回调地址中标识字段。</td></tr></tbody></table><p>其中子窗口允许你弹窗来展示应用内支付的窗口，并且当回跳到您自己设置的回调地址时会自动关闭窗口。</p>`,7),r=[l];function o(p,c,i,d,y,u){return e(),s("div",null,r)}const g=t(n,[["render",o]]);export{h as __pageData,g as default};
